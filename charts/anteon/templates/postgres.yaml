{{ if not .Values.postgres.external }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-db-script
data:
  init.sql: |
    CREATE DATABASE backend;
    CREATE DATABASE alazbackend;
    CREATE DATABASE hammermanager;
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: postgres
  name: postgres
spec:
  replicas: {{ .Values.postgres.replicas }}
  selector:
    matchLabels:
      service: postgres
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        service: postgres
    spec:
      containers:
        - env:
            - name: POSTGRES_PASSWORD
              valueFrom:
                configMapKeyRef:
                  key: POSTGRES_PASSWORD
                  name: env
            - name: PGDATA
              value: /var/lib/postgresql/data/postgres
          image: {{ .Values.images.postgres }}
          name: postgres
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: postgres-data
              subPath: postgres
            - name: scripts
              mountPath: /docker-entrypoint-initdb.d
      restartPolicy: Always
      volumes:
        - name: postgres-data
          persistentVolumeClaim:
            claimName: postgres-data
        - name: scripts
          configMap:
            name: init-db-script
status: {}
---
{{- if ne (int .Values.postgres.replicas) 0 -}}
apiVersion: v1
kind: Service
metadata:
  labels:
    service: postgres
  name: postgres
spec:
  ports:
    - name: "{{ .Values.postgres.port }}"
      port: {{ .Values.postgres.port }}
      targetPort: {{ .Values.postgres.port }}
  selector:
    service: postgres
status:
  loadBalancer: {}
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    service: postgres-data
  name: postgres-data
  annotations:
    "helm.sh/hook": "pre-install"
    "helm.sh/resource-policy": "keep"
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.pvc.postgres.size | quote }}
  storageClassName: {{ .Values.pvc.postgres.storageClassName }}
status: {}
{{- end -}}
{{- end -}}
