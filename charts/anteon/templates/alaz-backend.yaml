apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: alaz-backend
  name: alaz-backend
spec:
  replicas: {{ .Values.alazBackend.replicas }}
  selector:
    matchLabels:
      service: alaz-backend
  strategy: {}
  template:
    metadata:
      labels:
        service: alaz-backend
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 {{ .Values.postgres.host }} {{ .Values.postgres.port }} && nc -z backend 8008; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_app_onprem.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.alazBackend }}
          name: alaz-backend
          imagePullPolicy: IfNotPresent
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  labels:
    service: alaz-backend
  name: alaz-backend
spec:
  ports:
    - name: "8008"
      port: 8008
      targetPort: 8008
  selector:
    service: alaz-backend
status:
  loadBalancer: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: alaz-backend-celery-beat
  name: alaz-backend-celery-beat
spec:
  replicas: {{ .Values.alazBackend.celeryBeatReplicas }}
  selector:
    matchLabels:
      service: alaz-backend-celery-beat
  strategy: {}
  template:
    metadata:
      labels:
        service: alaz-backend-celery-beat
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 alaz-backend 8008 && nc -z rabbitmq 5672; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_celery_beat.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.alazBackend }}
          name: alaz-backend-celery-beat
          imagePullPolicy: IfNotPresent
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: alaz-backend-celery-worker-1
  name: alaz-backend-celery-worker-1
spec:
  replicas: {{ .Values.alazBackend.celeryWorkerReplicas }}
  selector:
    matchLabels:
      service: alaz-backend-celery-worker-1
  strategy: {}
  template:
    metadata:
      labels:
        service: alaz-backend-celery-worker-1
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 alaz-backend 8008 && nc -z rabbitmq 5672; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_celery_worker.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.alazBackend }}
          name: alaz-backend-celery-worker-1
          imagePullPolicy: IfNotPresent
          resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    service: alaz-backend-request-writer
  name: alaz-backend-request-writer
spec:
  replicas: {{ .Values.alazBackend.requestWriterReplicas }}
  selector:
    matchLabels:
      service: alaz-backend-request-writer
  strategy: {}
  template:
    metadata:
      labels:
        service: alaz-backend-request-writer
    spec:
      initContainers:
        - name: check-dependencies
          image: {{ .Values.images.initContainerBusybox }}
          command: ['sh', '-c', 'until nc -z -w4 alaz-backend 8008 && nc -z rabbitmq 5672; do echo waiting for dependencies; sleep 1; done;']
      containers:
        - args:
            - /workspace/start_scripts/start_request_writer.sh
          envFrom:
            - configMapRef:
                name: env
          image: {{ .Values.images.alazBackend }}
          name: alaz-backend-request-writer
          imagePullPolicy: IfNotPresent
          resources: {}
      restartPolicy: Always
status: {}
